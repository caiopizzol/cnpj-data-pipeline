# CNPJ Data Pipeline - Development Environment
# 
# Usage:
#   PostgreSQL (default): docker-compose --profile postgres up
#   MySQL (future):       docker-compose --profile mysql up
#   BigQuery (future):    docker-compose --profile bigquery up
#   
# Run just the pipeline with external DB: docker-compose up pipeline

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    profiles: ["postgres"]  # Only starts when postgres profile is active
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cnpj_dev}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db/postgres.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MySQL Database (placeholder - adapter not yet implemented)
  mysql:
    image: mysql:8.0
    profiles: ["mysql"]  # Only starts when mysql profile is active
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-mysql}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-cnpj_dev}
      MYSQL_USER: ${MYSQL_USER:-cnpj}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-cnpj}
    volumes:
      - mysql_data:/var/lib/mysql
      # - ./init-db/mysql.sql:/docker-entrypoint-initdb.d/init.sql:ro  # When available
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # BigQuery emulator for local development (future)
  # bigquery-emulator:
  #   image: ghcr.io/goccy/bigquery-emulator:latest
  #   profiles: ["bigquery"]
  #   ports:
  #     - "9050:9050"

  # CNPJ Data Pipeline
  pipeline:
    build: .
    # Available in all profiles AND when no profile is specified
    profiles: ["postgres", "mysql", "bigquery"]
    depends_on:
      postgres:
        condition: service_healthy
        required: false  # Only required if postgres profile is active
      mysql:
        condition: service_healthy
        required: false  # Only required if mysql profile is active
    volumes:
      - ./temp:/app/temp
      - ./logs:/app/logs
    environment:
      # Database backend selection (must match profile)
      DATABASE_BACKEND: ${DATABASE_BACKEND:-postgresql}
      
      # PostgreSQL settings (when using postgres profile)
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-cnpj_dev}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}

      # MySQL settings (when using mysql profile)
      MYSQL_HOST: ${MYSQL_HOST:-mysql}
      MYSQL_PORT: ${MYSQL_PORT:-3306}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-cnpj_dev}
      MYSQL_USER: ${MYSQL_USER:-cnpj}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-cnpj}
      
      # BigQuery settings (when using bigquery profile)
      # BQ_PROJECT_ID: ${BQ_PROJECT_ID:-test-project}
      # BQ_DATASET: ${BQ_DATASET:-cnpj}
      
      # Processing settings
      PROCESSING_STRATEGY: ${PROCESSING_STRATEGY:-auto}
      BATCH_SIZE: ${BATCH_SIZE:-50000}
      MAX_MEMORY_PERCENT: ${MAX_MEMORY_PERCENT:-80}
      DEBUG: ${DEBUG:-true}
    restart: "no"  # This is a batch job

volumes:
  postgres_data:
  mysql_data: